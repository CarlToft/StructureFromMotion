function [scell,mcell]=sm6points(imseq,index);
% [scell,mcell]=sm6points(imseq,index);
% Calculates the real solutions (1 or 3) of the minimal case
% of 6 points in 3 views
% Input:
%   imseq - cell of 3 IMAGEDATA objects
%   index - indices of points to use
% Output:
%   scell - cell of structures
%   mcell - cell of motions

if nargin<2,
  index=1:6;
end;


% change image coordinate systems

b1 = getpoints(imseq{1},index(1:4))';
b2 = getpoints(imseq{2},index(1:4))';
b3 = getpoints(imseq{3},index(1:4))';


M0=zeros(12,4);M0(1)=-1;M0(18)=-1;M0(35)=-1;M0(40)=-1;M0(44)=-1;M0(48)=-1;


M1=zeros(12,9);M1(1:4,1:3)=b1;M1(5:8,4:6)=b1;M1(9:12,7:9)=b1;
M2=zeros(12,9);M2(1:4,1:3)=b2;M2(5:8,4:6)=b2;M2(9:12,7:9)=b2;
M3=zeros(12,9);M3(1:4,1:3)=b3;M3(5:8,4:6)=b3;M3(9:12,7:9)=b3;

v=null([M1 M0]);
imT1=reshape(v(1:9),3,3)';
v=null([M2 M0]);
imT2=reshape(v(1:9),3,3)';
v=null([M3 M0]);
imT3=reshape(v(1:9),3,3)';

tmp1=svd(imT1);
tmp2=svd(imT2);
tmp3=svd(imT3);

scell=cell(0);
mcell=cell(0);

if tmp1(3)>1e-8 & tmp2(3)>1e-8 & tmp3(3)>1e-8,
%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%



c1=psphere(imT1*getpoints(imseq{1},index(5:6)));
c2=psphere(imT2*getpoints(imseq{2},index(5:6)));
c3=psphere(imT3*getpoints(imseq{3},index(5:6)));


N=[c1(1,1)*(c1(3,2)-c1(2,2)),c1(2,1)*(c1(1,2)-c1(3,2)),...
   c1(3,1)*(c1(2,2)-c1(1,2)),c1(3,2)*(c1(2,1)-c1(1,1)),...
   c1(2,2)*(c1(1,1)-c1(3,1));...
   c2(1,1)*(c2(3,2)-c2(2,2)),c2(2,1)*(c2(1,2)-c2(3,2)),...
   c2(3,1)*(c2(2,2)-c2(1,2)),c2(3,2)*(c2(2,1)-c2(1,1)),...
   c2(2,2)*(c2(1,1)-c2(3,1));...
   c3(1,1)*(c3(3,2)-c3(2,2)),c3(2,1)*(c3(1,2)-c3(3,2)),...
   c3(3,1)*(c3(2,2)-c3(1,2)),c3(3,2)*(c3(2,1)-c3(1,1)),...
   c3(2,2)*(c3(1,1)-c3(3,1))];
v=null(N);

poly=[v(1,2)*v(2,2)*v(5,2)-v(2,2)*v(3,2)*v(5,2)-v(2,2)*v(4,2)*v(5,2)+v(2,2)*v(3,2)*v(4,2)-v(1,2)*v(3,2)*v(4,2)+v(3,2)*v(4,2)*v(5,2),...
v(1,1)*v(2,2)*v(5,2)+v(1,2)*v(2,2)*v(5,1)+v(1,2)*v(2,1)*v(5,2)-v(2,1)*v(3,2)*v(5,2)-v(2,2)*v(3,1)*v(5,2)-v(2,2)*v(3,2)*v(5,1)-v(2,2)*v(4,1)*v(5,2)-v(2,1)*v(4,2)*v(5,2)-v(1,1)*v(3,2)*v(4,2)-v(2,2)*v(4,2)*v(5,1)-v(1,2)*v(3,1)*v(4,2)+v(2,2)*v(3,1)*v(4,2)+v(2,1)*v(3,2)*v(4,2)-v(1,2)*v(3,2)*v(4,1)+v(2,2)*v(3,2)*v(4,1)+v(3,2)*v(4,1)*v(5,2)+v(3,1)*v(4,2)*v(5,2)+v(3,2)*v(4,2)*v(5,1),...
v(1,1)*v(2,1)*v(5,2)-v(2,1)*v(3,1)*v(5,2)+v(1,2)*v(2,1)*v(5,1)+v(1,1)*v(2,2)*v(5,1)-v(2,1)*v(4,1)*v(5,2)-v(2,2)*v(3,1)*v(5,1)-v(2,1)*v(3,2)*v(5,1)-v(2,2)*v(4,1)*v(5,1)-v(2,1)*v(4,2)*v(5,1)-v(1,1)*v(3,1)*v(4,2)+v(2,1)*v(3,1)*v(4,2)-v(1,2)*v(3,1)*v(4,1)-v(1,1)*v(3,2)*v(4,1)+v(2,1)*v(3,2)*v(4,1)+v(2,2)*v(3,1)*v(4,1)+v(3,1)*v(4,2)*v(5,1)+v(3,1)*v(4,1)*v(5,2)+v(3,2)*v(4,1)*v(5,1),...
v(3,1)*v(4,1)*v(5,1)-v(2,1)*v(4,1)*v(5,1)+v(2,1)*v(3,1)*v(4,1)-v(2,1)*v(3,1)*v(5,1)+v(1,1)*v(2,1)*v(5,1)-v(1,1)*v(3,1)*v(4,1)];

alfa=roots(poly);
if log(min([svd(imT1);svd(imT2);svd(imT3)]))>-10 & log(min(svd(N)))>-10,
%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%
    

for i=1:length(alfa),
  if imag(alfa(i))==0,
    t=v(:,1)+alfa(i)*v(:,2);
    if t(1)~=t(2) & t(1)~=t(3) & t(2)~=t(3),
      X=[(t(4)-t(5))/(t(2)-t(3));t(4)/(t(1)-t(3));t(5)/(t(1)-t(2));1];

      A= [ c1(3,1),0,-c1(1,1),c1(3,1)-c1(1,1);...
	   0,c1(3,1),-c1(2,1),c1(3,1)-c1(2,1);...
	   c1(3,2)*X(1),0,-c1(1,2)*X(3),c1(3,2)-c1(1,2);...
	   0,c1(3,2)*X(2),-c1(2,2)*X(3),c1(3,2)-c1(2,2)];
      [u,s,w]=svd(A);
      P1=[diag(w(1:3,4)),w(4,4)*ones(3,1)];

      A= [ c2(3,1),0,-c2(1,1),c2(3,1)-c2(1,1);...
	   0,c2(3,1),-c2(2,1),c2(3,1)-c2(2,1);...
	   c2(3,2)*X(1),0,-c2(1,2)*X(3),c2(3,2)-c2(1,2);...
	   0,c2(3,2)*X(2),-c2(2,2)*X(3),c2(3,2)-c2(2,2)];
      [u,s,w]=svd(A);
      P2=[diag(w(1:3,4)),w(4,4)*ones(3,1)];

      A= [ c3(3,1),0,-c3(1,1),c3(3,1)-c3(1,1);...
	   0,c3(3,1),-c3(2,1),c3(3,1)-c3(2,1);...
	   c3(3,2)*X(1),0,-c3(1,2)*X(3),c3(3,2)-c3(1,2);...
	   0,c3(3,2)*X(2),-c3(2,2)*X(3),c3(3,2)-c3(2,2)];
      [u,s,w]=svd(A);
      P3=[diag(w(1:3,4)),w(4,4)*ones(3,1)];
      mcell={mcell{:},motion({inv(imT1)*P1,inv(imT2)*P2,inv(imT3)*P3})};
      scell={scell{:},structure([eye(4),ones(4,1),X])};
    end %if t(1)
  end
end;
%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%

end %if log...

%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%

end %if tmp1(3)>1e-8 & tmp2(3)>1e-8 & tmp3(3)>1e-8,
